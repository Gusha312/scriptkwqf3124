local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local TradeGui = player.PlayerGui:WaitForChild("Trade")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

-- Телепорт к дереву
local target = game:GetService('Workspace')['Map Assets'].Trees.BoarderTree.Leaves
local function teleportToTarget()
    local rootPart = character:FindFirstChild('HumanoidRootPart') or character:WaitForChild('HumanoidRootPart')
    rootPart.CFrame = target.CFrame + Vector3.new(0, 3, 0)
    print("Успешно телепортирован к дереву")
end

-- Основные настройки
local REQUIRED_AMOUNT = 12000
local COOLDOWN = 6
local ITEM_TYPE = "Shoom"
local MAX_ATTEMPTS = 30

-- Улучшенное логирование
local function log(msg)
    print("[AUTO TRADER]", os.date("%H:%M:%S"), msg)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Трейд бот",
        Text = msg,
        Duration = 5
    })
end

-- Улучшенный поиск партнера
local function findTradePartner()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
            if hrp and (hrp.Position - character.HumanoidRootPart.Position).Magnitude < 20 then
                return plr
            end
        end
    end
    return nil
end

-- Функция отправки трейд-запроса (исправленная)
local function sendTradeRequest(partner)
    ReplicatedStorage.TradeMasterEvent:FireServer("RequestTradeWithAsync", partner)
    log("Отправлен запрос трейда для @"..partner.Name)
    
    -- Ждем открытия окна трейда
    local attempts = 0
    repeat
        task.wait(1)
        attempts = attempts + 1
    until TradeGui.Enabled or attempts >= 10
    
    return TradeGui.Enabled
end

-- Основной рабочий цикл
while true do
    teleportToTarget()
    
    local coins = player.Data.Coins.Value
    local isReceiver = coins < 100000
    local partner = findTradePartner()
    
    if partner then
        log("Найден партнер: @"..partner.Name)
        
        -- Отправляем запрос на трейд
        if sendTradeRequest(partner) then
            if isReceiver then
                log("Режим: ПОЛУЧАТЕЛЬ | Ожидаю грибы...")
                
                -- Проверка ячеек получателя
                local attempts = 0
                while attempts < MAX_ATTEMPTS do
                    local allCorrect = true
                    for i = 1, 3 do
                        local cell = TradeGui.BG.You[tostring(i)].TextLabel
                        if not cell or tonumber(cell.Text) ~= REQUIRED_AMOUNT then
                            allCorrect = false
                            break
                        end
                    end
                    
                    if allCorrect then
                        ReplicatedStorage.TradeMasterEvent:FireServer("ToggleReadyStateAsync")
                        log("Все грибы получены! Трейд завершен.")
                        break
                    end
                    
                    attempts = attempts + 1
                    task.wait(1)
                end
            else
                log("Режим: ОТПРАВИТЕЛЬ | Отправляю грибы...")
                
                -- Отправка грибов
                for _ = 1, 3 do
                    ReplicatedStorage.TradeMasterEvent:FireServer("AddItemAsync", {
                        Amount = REQUIRED_AMOUNT,
                        Type = ITEM_TYPE
                    })
                    task.wait(0.5)
                end
                
                -- Ожидание подтверждения
                local attempts = 0
                while attempts < MAX_ATTEMPTS do
                    if TradeGui.BG.Player2Ready.Text == "They Accepted" then
                        ReplicatedStorage.TradeMasterEvent:FireServer("ToggleReadyStateAsync")
                        log("Партнер подтвердил трейд!")
                        break
                    end
                    attempts = attempts + 1
                    task.wait(1)
                end
            end
        else
            log("Не удалось открыть окно трейда")
        end
    else
        log("Партнер не найден рядом")
    end
    
    log("Ожидание кулдауна "..COOLDOWN.." сек...")
    task.wait(COOLDOWN)
end
