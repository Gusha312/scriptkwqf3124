--[[
    Optimized Pls Donate Auto Farm
    Features: Auto Booth, Teleport, Donation Webhooks
]]

repeat task.wait() until game:IsLoaded()

if game.PlaceId ~= 8737602449 and game.PlaceId ~= 8943844393 then return end

-- Services
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TPService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Variables
local Remotes
local uid = Players.LocalPlayer.UserId
local newRaisedFormat = Players.LocalPlayer:WaitForChild('leaderstats'):WaitForChild('Raised')
local httprequest = (syn and syn.request) or http and http.request or http_request or (fluxus and fluxus.request) or request
local queueonteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)

if queueonteleport then
    queueonteleport("loadstring(game:HttpGet('https://raw.githubusercontent.com/CF-Trail/tzechco-PlsDonateAutofarmBackup/main/old.lua'))()")
end

-- Find Remotes
for _,v in next, ReplicatedStorage:GetChildren() do
    if v.Name:find('Remote') and v:IsA('ModuleScript') then
        local suc = pcall(function() require(v).Event('PromotionBlimpGiftbux'):FireServer() end)
        if suc then Remotes = require(v); break end
    end
end

-- Anti-AFK
local VirtualUser = game:GetService('VirtualUser')
Players.LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- Settings
getgenv().settings = {
    webhookBox = "https://discord.com/api/webhooks/1406631746941751336/lQWvRFWeL_o3Ffwte-zNZSctBiLVsHr8Asm4JUAfeJk1ojfznaxUOR2V21aHXNp8Nnob",
    webhookToggle = true,
    serverHopToggle = true,
    serverHopDelay = 15,
    boothPosition = 3,
    standingPosition = "Front"
}

-- Webhook Function
local function webhook(raised, donor)
    if not getgenv().settings.webhookToggle then return end
    local url = getgenv().settings.webhookBox
    if not url or url == "" then return end
    
    local embed = {
        title = Players.LocalPlayer.Name .. " ðŸ’¸ just got donated!",
        description = string.format("**%d R$** by **%s**\nâ€¢ Total: %d R$", raised, donor, newRaisedFormat.Value),
        color = 0x2ECC71,
        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
    }
    
    local payload = HttpService:JSONEncode({embeds = {embed}})
    httprequest({
        Url = url,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = payload
    })
end

-- Server Hop Function
local function serverHop()
    local PlaceId = 8737602449
    local servers = {}
    
    local req = httprequest({
        Url = "https://games.roblox.com/v1/games/"..PlaceId.."/servers/Public?sortOrder=Desc&limit=100"
    })
    
    local body = HttpService:JSONDecode(req.Body)
    if body and body.data then
        for _, server in ipairs(body.data) do
            if server.playing < server.maxPlayers and server.id ~= game.JobId then
                table.insert(servers, server.id)
            end
        end
    end
    
    if #servers > 0 then
        TPService:TeleportToPlaceInstance(PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
    end
end

-- Booth Management
local function findUnclaimedBooth()
    local boothUI = workspace:WaitForChild("MapUI"):WaitForChild("BoothUI")
    for _, booth in ipairs(boothUI:GetChildren()) do
        if booth.Details.Owner.Text == "unclaimed" then
            return tonumber(booth.Name:match("%d+"))
        end
    end
    return nil
end

local function claimBooth(boothId)
    if not boothId then return false end
    local success = pcall(function()
        Remotes.Event("ClaimBooth"):InvokeServer(boothId)
    end)
    return success
end

-- Main Execution
local function main()
    local boothId = findUnclaimedBooth()
    if not boothId then 
        serverHop()
        return
    end
    
    if claimBooth(boothId) then
        -- Position character at booth
        local character = Players.LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            
            if humanoid and rootPart then
                -- Find booth position and teleport
                for _, interact in ipairs(workspace.BoothInteractions:GetChildren()) do
                    if interact:GetAttribute("BoothSlot") == boothId then
                        local offset = CFrame.new(getgenv().settings.boothPosition, 0, 0)
                        rootPart.CFrame = interact.CFrame * offset
                        break
                    end
                end
            end
        end
        
        -- Setup donation tracking
        local lastRaised = newRaisedFormat.Value
        newRaisedFormat.Changed:Connect(function()
            local newRaised = newRaisedFormat.Value
            local donationAmount = newRaised - lastRaised
            
            if donationAmount > 0 then
                -- Find donor (nearest player)
                local donor = "Unknown"
                local localPos = Players.LocalPlayer.Character.HumanoidRootPart.Position
                local closestDistance = math.huge
                
                for _, player in ipairs(Players:GetPlayers()) do
                    if player ~= Players.LocalPlayer and player.Character then
                        local playerPos = player.Character.HumanoidRootPart.Position
                        local distance = (playerPos - localPos).Magnitude
                        if distance < closestDistance and distance < 20 then
                            closestDistance = distance
                            donor = player.Name
                        end
                    end
                end
                
                -- Send webhook
                webhook(donationAmount, donor)
                lastRaised = newRaised
            end
        end)
        
        -- Auto server hop
        if getgenv().settings.serverHopToggle then
            task.wait(getgenv().settings.serverHopDelay * 60)
            serverHop()
        end
    else
        serverHop()
    end
end

-- Start
main()
