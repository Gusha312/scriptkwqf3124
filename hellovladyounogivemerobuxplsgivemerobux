local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local CURRENT_PLACE_ID = game.PlaceId
local TARGET_PLACE_ID = 14119723130
local MAIN_PLACE_ID = 5233782396

-- –¢–æ—á–Ω—ã–µ CFrame —Ü–µ–ª–µ–≤—ã—Ö MarketStalls (–∫–∞–∫ –µ—Å—Ç—å)
local TARGET_CFRAMES = {
    CFrame.new(-115.76767, 31.4889774, -83.580658, -0.882971644, -0.469426453, -1.34855509e-05, 1.34855509e-05, -5.41210175e-05, 1, -0.469426453, 0.882971644, 5.40614128e-05),
    CFrame.new(-80.3615417, 31.4889774, -23.9790859, -0.0349992514, -0.999387324, 4.3451786e-05, -4.3451786e-05, 4.50015068e-05, 1, -0.999387324, 0.0349992514, -4.50611115e-05),
    CFrame.new(-85.1257629, 31.4889774, 0.639569223, 0.342006564, -0.939697623, -7.00354576e-06, -7.00354576e-06, -1.00135803e-05, 1, -0.939697623, -0.342006564, -1.00135803e-05),
    CFrame.new(-142.565216, 31.4889774, -92.6095505, -0.99452734, -0.104477406, 2.75298953e-06, -2.75298953e-06, 5.2511692e-05, 1, -0.104477406, 0.99452728, -5.25712967e-05),
    CFrame.new(-168.641525, 31.4889774, -90.8674011, -0.97028327, 0.241971374, -2.48849392e-06, 2.48849392e-06, 2.02655792e-05, 0.99999994, 0.241971374, 0.970283329, -2.02655792e-05),
    CFrame.new(-191.504898, 31.4889774, -81.1337967, -0.787993431, 0.615683556, 1.41859055e-05, -1.41859055e-05, -4.12464142e-05, 1, 0.615683556, 0.78799355, 4.12464142e-05),
    CFrame.new(-160.504944, 31.4889774, 46.381073, 0.99452728, 0.104477406, -2.75298953e-06, -2.75298953e-06, 5.2511692e-05, 1, 0.104477406, -0.99452728, 5.2511692e-05),
    CFrame.new(-134.42865, 31.4889774, 44.6389275, 0.970283389, -0.241971403, 2.48104334e-06, 2.48104334e-06, 2.01463699e-05, 1.00000012, -0.241971403, -0.970283508, 2.01463699e-05),
    CFrame.new(-187.302505, 31.4889774, 37.3521729, 0.882971585, 0.469426453, 1.34855509e-05, 1.34855509e-05, -5.41210175e-05, 1, 0.469426453, -0.882971644, -5.41210175e-05),
    CFrame.new(-111.565277, 31.4889774, 34.9053154, 0.78799355, -0.615683556, -1.41859055e-05, -1.41859055e-05, -4.12464142e-05, 1, -0.615683556, -0.78799355, -4.12464142e-05)
}

local MIN_PLAYERS = 20
local POSITION_TOLERANCE = 0.01 -- –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –¥–ª—è —Ç–æ—á–Ω—ã—Ö CFrame
local ROTATION_TOLERANCE = 0.0001 -- –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∞—è –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è
local CHECK_INTERVAL = 30
local STALL_CHECK_INTERVAL = 2

-- –ö—ç—à –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
local localPlayer = Players.LocalPlayer
local claimStallRemote = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ClaimStall")

local lastMouseMove = os.time()
local lastStallCheck = 0

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è CFrame
function isCFrameExact(cf1, cf2, posTolerance, rotTolerance)
    -- –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
    local posDiff = (cf1.Position - cf2.Position).Magnitude
    if posDiff > posTolerance then
        return false, posDiff, 0
    end
    
    -- –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã
    local r11, r12, r13, r21, r22, r23, r31, r32, r33 = cf1:GetComponents()
    local s11, s12, s13, s21, s22, s23, s31, s32, s33 = cf2:GetComponents()
    
    local rotDiff = math.abs(r11 - s11) + math.abs(r12 - s12) + math.abs(r13 - s13) +
                   math.abs(r21 - s21) + math.abs(r22 - s22) + math.abs(r23 - s23) +
                   math.abs(r31 - s31) + math.abs(r32 - s32) + math.abs(r33 - s33)
    
    return rotDiff <= rotTolerance, posDiff, rotDiff
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ—á–Ω–æ–≥–æ MarketStall –ø–æ CFrame
function findExactMarketStall(targetCFrame)
    local interactables = workspace:FindFirstChild("Interactable")
    if not interactables then 
        print("‚ùå Interactable –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return nil 
    end
    
    for _, stall in ipairs(interactables:GetChildren()) do
        if stall:IsA("Model") and stall:FindFirstChild("AnchorPart") then
            local anchor = stall.AnchorPart
            local isExact, posDiff, rotDiff = isCFrameExact(anchor.CFrame, targetCFrame, POSITION_TOLERANCE, ROTATION_TOLERANCE)
            
            if isExact then
                print(string.format("üéØ –¢–û–ß–ù–û–ï –°–û–í–ü–ê–î–ï–ù–ò–ï: %s", stall.Name))
                print(string.format("   –ü–æ–∑–∏—Ü–∏—è: diff=%.6f, –≤—Ä–∞—â–µ–Ω–∏–µ: diff=%.8f", posDiff, rotDiff))
                return stall
            end
        end
    end
    return nil
end

-- –ü–æ–∫—É–ø–∫–∞ MarketStall
function buyMarketStall(stall)
    if stall and stall:FindFirstChild("AnchorPart") then
        local args = {stall.AnchorPart}
        local success, result = pcall(function()
            claimStallRemote:FireServer(unpack(args))
            return true
        end)
        return success
    end
    return false
end

-- –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –≤—Å–µ—Ö —Ü–µ–ª–µ–≤—ã—Ö MarketStalls
function tryBuyTargetStalls()
    local boughtAny = false
    
    for i, targetCFrame in ipairs(TARGET_CFRAMES) do
        local targetPos = targetCFrame.Position
        print(string.format("\nüîç –ü–æ–∏—Å–∫ [%d] - –¢–æ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è: %.5f, %.5f, %.5f", 
            i, targetPos.X, targetPos.Y, targetPos.Z))
        
        local stall = findExactMarketStall(targetCFrame)
        
        if stall then
            local success = buyMarketStall(stall)
            if success then
                print("‚úÖ –£–°–ü–ï–•: –ö—É–ø–ª–µ–Ω MarketStall [" .. i .. "]: " .. stall.Name)
                boughtAny = true
            else
                print("‚ùå –û–®–ò–ë–ö–ê –ø–æ–∫—É–ø–∫–∏: " .. stall.Name)
            end
        else
            print("‚ùå –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏ [" .. i .. "]")
        end
    end
    
    return boughtAny
end

-- –î–µ–±–∞–≥: –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç–æ—á–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ Interactable
function debugAllExactPositions()
    local interactables = workspace:FindFirstChild("Interactable")
    if not interactables then return end
    
    print("\n=== –î–ï–ë–ê–ì: –í–°–ï –¢–û–ß–ù–´–ï –ü–û–ó–ò–¶–ò–ò ===")
    for i, obj in ipairs(interactables:GetChildren()) do
        if obj:IsA("Model") and obj:FindFirstChild("AnchorPart") then
            local anchor = obj.AnchorPart
            local pos = anchor.Position
            
            print(string.format("%d: %s", i, obj.Name))
            print(string.format("   –ü–æ–∑–∏—Ü–∏—è: %.8f, %.8f, %.8f", pos.X, pos.Y, pos.Z))
            
            -- –¢–∞–∫–∂–µ –≤—ã–≤–µ–¥–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤—Ä–∞—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ CFrame
            local r11, r12, r13, r21, r22, r23, r31, r32, r33 = anchor.CFrame:GetComponents()
            print(string.format("   –í—Ä–∞—â–µ–Ω–∏–µ: %.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f, %.8f", 
                r11, r12, r13, r21, r22, r23, r31, r32, r33))
            print("   ---")
        end
    end
    print("==================================")
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏
function attemptStallPurchase()
    local currentTime = os.time()
    
    if currentTime - lastStallCheck >= STALL_CHECK_INTERVAL then
        print("\n" .. string.rep("=", 70))
        print("üîÑ –ü–æ–∏—Å–∫ —Ç–æ—á–Ω—ã—Ö CFrame —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π...")
        tryBuyTargetStalls()
        print(string.rep("=", 70))
        lastStallCheck = currentTime
    end
end

-- –ê–Ω—Ç–∏-–ê–§–ö
function antiAFK()
    if os.time() - lastMouseMove >= 60 then
        VirtualInputManager:SendMouseMoveEvent(
            math.random(100, 500), 
            math.random(100, 500), 
            game
        )
        lastMouseMove = os.time()
    end
end

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
function checkPlayers()
    local playerCount = #Players:GetPlayers()
    print("üë• –ò–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω: " .. playerCount)
    
    if playerCount < MIN_PLAYERS then
        print("‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–≥—Ä–æ–∫–æ–≤")
        return false
    end
    return true
end

-- –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –º–µ–∂–¥—É –ø–ª–µ–π—Å–∞–º–∏
function handlePlaceTeleportation()
    if CURRENT_PLACE_ID == MAIN_PLACE_ID then
        print("üöÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º—Å—è –≤ –º–∏—Ä...")
        TeleportService:Teleport(TARGET_PLACE_ID, localPlayer)
        return true
    end
    return false
end

-- –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
function main()
    print("üéØ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω! –ü–æ–∏—Å–∫ —Ç–æ—á–Ω—ã—Ö CFrame —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
    
    -- –ü–æ–∫–∞–∂–µ–º –¥–µ–±–∞–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    debugAllExactPositions()
    
    if handlePlaceTeleportation() then
        return
    end

    local lastPlayerCheck = os.time()
    
    while true do
        local currentTime = os.time()
        
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫
        if currentTime - lastPlayerCheck >= CHECK_INTERVAL then
            checkPlayers()
            lastPlayerCheck = currentTime
        end
        
        -- –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ MarketStalls
        attemptStallPurchase()
        
        -- –ê–Ω—Ç–∏-–ê–§–ö
        antiAFK()
        
        wait(0.1)
    end
end

-- –ó–∞–ø—É—Å–∫
coroutine.wrap(function()
    pcall(main)
end)()
