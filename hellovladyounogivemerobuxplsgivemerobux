local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local MarketRemotes = ReplicatedStorage:WaitForChild("Remotes")
local ClaimStall = MarketRemotes:WaitForChild("ClaimStall")

local stallCFrames = {
    CFrame.new(-115.76767, 31.4889774, -83.580658, -0.882971644, -0.469426453, -1.34855509e-05, 1.34855509e-05, -5.41210175e-05, 1, -0.469426453, 0.882971644, 5.40614128e-05),
    CFrame.new(-80.3615417, 31.4889774, -23.9790859, -0.0349992514, -0.999387324, 4.3451786e-05, -4.3451786e-05, 4.50015068e-05, 1, -0.999387324, 0.0349992514, -4.50611115e-05),
    CFrame.new(-85.1257629, 31.4889774, 0.639569223, 0.342006564, -0.939697623, -7.00354576e-06, -7.00354576e-06, -1.00135803e-05, 1, -0.939697623, -0.342006564, -1.00135803e-05),
    CFrame.new(-142.565216, 31.4889774, -92.6095505, -0.99452734, -0.104477406, 2.75298953e-06, -2.75298953e-06, 5.2511692e-05, 1, -0.104477406, 0.99452728, -5.25712967e-05),
    CFrame.new(-168.641525, 31.4889774, -90.8674011, -0.97028327, 0.241971374, -2.48849392e-06, 2.48849392e-06, 2.02655792e-05, 0.99999994, 0.241971374, 0.970283329, -2.02655792e-05),
    CFrame.new(-191.504898, 31.4889774, -81.1337967, -0.787993431, 0.615683556, 1.41859055e-05, -1.41859055e-05, -4.12464142e-05, 1, 0.615683556, 0.78799355, 4.12464142e-05),
    CFrame.new(-160.504944, 31.4889774, 46.381073, 0.99452728, 0.104477406, -2.75298953e-06, -2.75298953e-06, 5.2511692e-05, 1, 0.104477406, -0.99452728, 5.2511692e-05),
    CFrame.new(-134.42865, 31.4889774, 44.6389275, 0.970283389, -0.241971403, 2.48104334e-06, 2.48104334e-06, 2.01463699e-05, 1.00000012, -0.241971403, -0.970283508, 2.01463699e-05),
    CFrame.new(-187.302505, 31.4889774, 37.3521729, 0.882971585, 0.469426453, 1.34855509e-05, 1.34855509e-05, -5.41210175e-05, 1, 0.469426453, -0.882971644, -5.41210175e-05),
    CFrame.new(-111.565277, 31.4889774, 34.9053154, 0.78799355, -0.615683556, -1.41859055e-05, -1.41859055e-05, -4.12464142e-05, 1, -0.615683556, -0.78799355, -4.12464142e-05)
}

local marketStalls = workspace:WaitForChild("Interactable"):WaitForChild("MarketStalls")
local localPlayer = Players.LocalPlayer

-- Анти-AFK система
local function setupAntiAFK()
    local connection
    connection = game:GetService("RunService").Heartbeat:Connect(function()
        -- Имитация движения мыши
        VirtualInputManager:SendMouseMoveEvent(10, 10, game:GetService("Workspace"))
        VirtualInputManager:SendMouseMoveEvent(20, 20, game:GetService("Workspace"))
        
        -- Имитация нажатия клавиш
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.W, false, game)
        task.wait(0.1)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.W, false, game)
        
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.A, false, game)
        task.wait(0.1)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.A, false, game)
    end)
    
    return connection
end

-- Получение информации о сервере
local function getServerInfo(placeId)
    local success, result = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..placeId.."/servers/Public?limit=100"))
    end)
    
    if success and result and result.data then
        return result.data
    end
    return {}
end

-- Поиск сервера с максимальным онлайном
local function findBestServer(placeId)
    local servers = getServerInfo(placeId)
    local bestServer = nil
    local maxPlayers = 0
    
    for _, server in ipairs(servers) do
        if server.playing and server.playing > maxPlayers and server.playing < server.maxPlayers then
            maxPlayers = server.playing
            bestServer = server
        end
    end
    
    return bestServer
end

-- Телепортация на лучший сервер
local function teleportToBestServer(targetPlaceId)
    local bestServer = findBestServer(targetPlaceId)
    if bestServer and bestServer.id then
        TeleportService:TeleportToPlaceInstance(targetPlaceId, bestServer.id, localPlayer)
        return true
    end
    return false
end

-- Проверка необходимости телепортации
local function checkTeleportConditions()
    local currentPlayers = #Players:GetPlayers()
    
    -- Если текущий плейс = 5233782396, телепортироваться в 14119723130
    if game.PlaceId == 5233782396 then
        print("Current place is 5233782396, teleporting to 14119723130...")
        return teleportToBestServer(14119723130)
    end
    
    -- Если игроков <= 20, найти сервер с максимальным онлайном
    if currentPlayers <= 20 then
        print("Only "..currentPlayers.." players online, searching for better server...")
        return teleportToBestServer(game.PlaceId)
    end
    
    return false
end

-- Основная функция
local function main()
    -- Запускаем анти-AFK
    local antiAFKConnection = setupAntiAFK()
    
    while true do
        -- Проверяем условия для телепортации
        if checkTeleportConditions() then
            print("Teleporting to better server...")
            wait(5) -- Даем время для телепортации
            break
        end
        
        -- Пытаемся занять лавки
        for _, stallCFrame in ipairs(stallCFrames) do
            local anchorPart = findAnchorPartByCFrame(stallCFrame)
            
            if anchorPart then
                local args = {anchorPart}
                ClaimStall:FireServer(unpack(args))
                print("Attempted to claim stall at CFrame:", stallCFrame)
            else
                warn("AnchorPart not found for CFrame:", stallCFrame)
            end
            
            wait(0.3)
        end
        
        print("Completed cycle. Waiting 2 seconds before next attempt...")
        wait(2)
    end
    
    -- Отключаем анти-AFK при выходе
    if antiAFKConnection then
        antiAFKConnection:Disconnect()
    end
end

-- Функция для поиска AnchorPart по CFrame
local function findAnchorPartByCFrame(targetCFrame)
    for _, child in pairs(marketStalls:GetChildren()) do
        if child:IsA("BasePart") and child.Name == "AnchorPart" then
            if child.CFrame == targetCFrame then
                return child
            end
        end
    end
    return nil
end

-- Запускаем основную функцию в защищенном режиме
local success, errorMsg = pcall(main)
if not success then
    warn("Script error: "..errorMsg)
    -- Перезапуск скрипта через 10 секунд при ошибке
    wait(10)
    main()
end
